" .vimrc
" Sam Larkin
" https://samlarkin.xyz
" https://github.com/samlarkin
" 2020-08-28


" HELP:

" use :help and :helpgrep to find what you need
" this is probably the most important tool at your disposal
" e.g. :help i_<C-n>
" e.g. :help <C-n>
" e.g. :h vimgrep


" BASIC SETUP:

filetype indent plugin on
syntax enable
set nocompatible
set confirm
set showcmd
set showmode
set visualbell
set vb t_vb=
set autoindent
set ruler
set laststatus=2
set cmdheight=2
set number
set shiftwidth=4
set softtabstop=4
set ts=4
set expandtab
"set wrap
"set linebreak
set textwidth=79
set wrapmargin=0
set formatoptions+=t
set notimeout ttimeout ttimeoutlen=200
set pastetoggle=<F11>
set viminfo+=n~/.vim/viminfo
set bg=dark
colorscheme gruvbox


" PYTHON SETUP:

autocmd FileType python setlocal colorcolumn=80
autocmd FileType python setlocal textwidth=79
autocmd BufWritePost *.py call flake8#Flake8()


" BASIC MAPPINGS:

map Y y$
map W :w<CR>


" LEADER MAPPINGS:

let mapleader = "\<Space>"

nnoremap <leader>so :so %<CR> "source vimrc
nnoremap <leader>s :%s///g<Left><Left><Left>
nnoremap <leader>d :r !$HOME/.vim/sh/today.sh<CR>
nnoremap <leader>t :r !$HOME/.vim/sh/time.sh<CR>
nnoremap <leader><CR> o<ESC>
nnoremap <leader>spell :setlocal spell! spelllang=en_gb<CR>


" SNIPPETS:

nnoremap <leader>html :-1read $HOME/.vim/snippets/skeleton.html<CR>4jwf>a 
nnoremap <leader>md :-1read $HOME/.vim/snippets/skeleton.md<CR>3j5l"=strftime("%Y-%m-%d")<C-M>p2kA<SPACE>
nnoremap <leader># :read $HOME/.vim/snippets/hashline<CR>


" FINDING FILES:

" - hit tab to :find by partial match
" - use * to make it fuzzy
" - :b lets you autocomplete any open buffer
" - :ls lists open buffers

" search down into subfolders
" provides tab-completion for all file-related tasks
set path+=**

" Display all matching files when we tab complete
set wildmenu


" TAG JUMPING:

" - use <C-]> to jump to tag under cursor
" - use g<C-]> for ambiguous tags
" - use <C-t> to jump back up the tag stack
" - note: this doesn't provide a visual list of tags

command! MakeTags !ctags -R .


" AUTOCOMPLETE:

" - :help ins-completion for documentation
" - <C-n> or <C-p> to autocomplete whilst in INSERT mode using 'complete' option
" - <C-x><C-n> to autocomplete only from the current file  
" - <C-x><C-f> to autocomplete only filenames (can use an absolute path)
" - <C-x><C-]> to autocomplete only using tags (see ctags above) 


" FILE BROWSING:

" using netrw
" - :edit a directory to open a file browser
" - <C-v> to open a file in a vsplit window
" - <C-t> to open a file in a tab

" netrw config
let g:netrw_banner=0        "disable annoying banner
let g:netrw_browse_split=4  "open in prior window
let g:netrw_altv=1          "open splits to the right
let g:netrw_liststyle=3     "tree view


" ABBREVIATIONS:

" execute commands when certain strings are typed in INSERT mode


" NOTES:

" new note
function! NewNote()
    let fname =  '/home/sam/notes/' . strftime('%Y-%m-%d') . '_0' . '.md'
    execute 'edit' fname
    echomsg 'Editing new note:' fname
    execute '-1read $HOME/.vim/snippets/skeleton.md'
endfunction

nnoremap <leader>nn :call NewNote()<CR>3j5l"=strftime("%Y-%m-%d")<C-M>p2kA
nnoremap <leader>cn :!/home/sam/notes/compiler/compile_notes.sh<CR><CR>
nnoremap <leader>sn :vimgrep //g *<Left><Left><Left><Left>
nnoremap <leader>n :cnext<CR>
nnoremap <leader>p :cprev<CR>
